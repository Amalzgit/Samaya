<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Add New Product</h2>
            <p>Add your Products</p>
        </div>

    </div>
    <div class="card mb-4">
        <!--  -->
        <form id="addProductForm" action="/admin/add-product" method="post" enctype="multipart/form-data">

            <header class="card-header">
                <div class="row align-items-center">
                    <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                        <label for="productCategory" class="form-label">Category</label>
                        <select id="productCategory" name="category" class="form-select">
                            <option value="" disabled selected>Select Category</option>
                            <% for (let category of categories) { %>
                                <option value="<%= category._id %>">
                                    <%= category.name %>
                                </option>

                                <% } %>
                        </select>
                        <div id="productCategoryError" class="invalid-feedback"></div>
                    </div>
                    <div class="col-md-2 col-6">
                        <input type="date" value="02.05.2022" class="form-control">
                    </div>
                </div>
            </header>

            <div class="card-body">
                <% if (successMessage) { %>
                    <div class="alert alert-success">
                        <%= successMessage %>
                    </div>
                    <% } %>

                        <% if (errorMessage) { %>
                            <div class="alert alert-danger">
                                <%= errorMessage %>
                            </div>
                            <% } %>


                            <article class="itemlist">
                                <div class="row align-items-center">
                                    <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                                        <label for="productName" class="form-label">Product Name</label>
                                        <input type="text" id="productName" name="name" class="form-control" placeholder="Enter product name">
                                        <span id="productNameError" class="error" style="color: red;"></span>
                                    </div>
                                    <div class="col-lg-2 col-sm-2 col-4 col-price">
                                        <label for="productPrice" class="form-label">Price</label>
                                        <input type="text" id="productPrice" name="price" class="form-control" placeholder="Enter price">
                                        <span id="productPriceError" class="error" style="color: red;"></span>
                                    </div>
                                    <div class="col-lg-2 col-sm-2 col-4 col-price">
                                        <label for="productStock" class="form-label">Stock</label>
                                        <input type="number" id="productStock" name="stock" class="form-control" placeholder="Enter stock quantity">
                                        <span id="productStockError" class="error" style="color: red;"></span>
                                    </div>
                                    <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                                        <label for="productDescription" class="form-label">Description</label>
                                        <textarea id="productDescription" name="description" class="form-control" rows="3"
                                            placeholder="Enter product description"></textarea>
                                        <span id="productDescriptionError" class="error" style="color: red;"></span>
                                    </div>
                                    <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                                        <label for="productImage" class="form-label">Product Image</label>
                                        <input type="file" id="productImage" multiple name="images" class="form-control">
                                        <span id="productImageError" class="error" style="color: red;"></span>
                                        <img id="croppedImage" style="max-width: 100%; height: auto; display: none;">
                                        <button id="cropButton" class="btn btn-primary mt-2" style="display: none;">Crop Image</button>
                                    </div>
                                </div>
                            </article>
                            
                                <div class="row align-items-center mt-3">
                                    <div class="col-lg-12 col-sm-12 col-12 text-end">
                                        <button type="submit" class="btn btn-primary">Add Product</button>
                                    </div>
                                </div>
            </div>
        </form>
        <!--  -->
    </div>
</section>


<script>


    document.addEventListener("DOMContentLoaded", () => {
      const categoryInput = document.getElementById('category');
      const nameInput = document.getElementById('name');
      const priceInput = document.getElementById('price');
      const descriptionInput = document.getElementById('description');
      const imagesInput = document.getElementById('images');
      const stockInput = document.getElementById('stock');
  
  
  
      const categoryError = document.getElementById('categoryError');
      const nameError = document.getElementById('nameError');
      const priceError = document.getElementById('priceError');
      const descriptionError = document.getElementById('descriptionError');
      const imagesError = document.getElementById('imagesError');
      const stockError = document.getElementById('stockError');
  
      const validatecategory = () => {
        if (Input.value.trim() === '') {
            categoryError.textContent = '* Category is required';
          return false;
        } else {
            categoryError.textContent = '';
          return true;
        }
      }
  
      const validatename = () => {
        if (nameInput.value.trim() === '') {
          nameError.textContent = '* Last name required';
          return false;
        } else {
          nameError.textContent = '';
          return true;
        }
      }
  
      const validateprice = () => {
        const priceInput = document.getElementById('priceInput');
    const priceError = document.getElementById('priceError');
    const priceRegex = /^[0-9]+(\.[0-9]{1,2})?$/; 

    const priceValue = priceInput.value.trim();

    if (priceValue === '') {
        priceError.textContent = '* Price is required';
        return false;
    } else if (!priceRegex.test(priceValue)) {
        priceError.textContent = '* Enter a valid price ';
        return false;
    } else if (parseFloat(priceValue) < 0) {
        priceError.textContent = '* Price cannot be negative';
        return false;
    } else {
        priceError.textContent = '';
        return true;
    }
      }
      
      const validatestock =()=>{
        const stockValue = stockInput.value.trim();
        if (stockValue === '') {
        stockError.textContent = '* Stock is required';
        return false;
    } else if (isNaN(stockValue) || parseInt(stockValue) < 0) {
        stockError.textContent = '* Enter a valid stock quantity';
        return false;
    } else {
        stockError.textContent = '';
        return true;
    }

      }
      
  
      const validatedescription = () => {
        if (Input.value.trim() === '') {
          descriptionError.textContent = '* Description is  required';
          return false;
        } else {
            descriptionError.textContent = '';
          return true;
        }
      }
  
      const validateimages = () => {
        const imagesInput = document.getElementById('imagesInput');
    const imagesError = document.getElementById('imagesError'); 
    
    // List of allowed file extensions
    const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;

    if (imagesInput.files.length === 0) {
        imagesError.textContent = '* Images are required';
        return false;
    }

    for (let i = 0; i < imagesInput.files.length; i++) {
        const file = imagesInput.files[i];
        
        // Check file extension
        if (!allowedExtensions.exec(file.name)) {
            imagesError.textContent = '* Invalid file type. Only JPG, JPEG, PNG, and GIF are allowed';
            return false;
        }

        // Check file size (example: 5MB max size)
        const maxSize = 5 * 1024 * 1024; // 5MB in bytes
        if (file.size > maxSize) {
            imagesError.textContent = `* File size should be less than 5MB. ${file.name} is too large`;
            return false;
        }
    }

    imagesError.textContent = '';
    return true;
      }
  
      categoryInput.addEventListener('input', validatecategory);
      nameInput.addEventListener('input', validatename);
      priceInput.addEventListener('input', validateprice);
      descriptionInput.addEventListener('input', validatedescription);
      imagesInput.addEventListener('input', validateimages);
      stockInput.addEventListener('input', validatestock);

  
      const form = document.getElementById('formData');
  
      form.addEventListener('submit', (event) => {
        if (!validatecategory() || !validatename() || !validateprice() || !validatedescription() || !validatestock() ||!validateimages()) {
          event.preventDefault();
        }
      });
    });
  </script>