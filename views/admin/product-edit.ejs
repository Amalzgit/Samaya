<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Edit Product</h2>
            <p>Edit your Product Details</p>
        </div>
    </div>
    <div class="card mb-4">
        <div class="card-body">
            <% if (successMessage) { %>
                <div class="alert alert-success">
                    <%= successMessage %>
                </div>
            <% } %>

            <% if (errorMessage) { %>
                <div class="alert alert-danger">
                    <%= errorMessage %>
                </div>
            <% } %>

            <form id="editProductForm" action="/admin/product-edit/<%= product._id %>" method="post" enctype="multipart/form-data">
                <article class="itemlist">
                    <div class="row align-items-center">
                        <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                            <label for="productName" class="form-label">Product Name</label>
                            <input type="text" id="productName" name="name" class="form-control" value="<%= product.name %>" placeholder="Enter product name">
                            <span id="nameError" class="error" style="color: red;"></span>
                        </div>
                        <div class="col-lg-2 col-sm-2 col-4 col-price">
                            <label for="productPrice" class="form-label">Price</label>
                            <input type="text" id="productPrice" name="price" class="form-control" value="<%= product.price %>" placeholder="Enter price">
                            <span id="priceError" class="error" style="color: red;"></span>
                        </div>
                        <div class="col-lg-2 col-sm-2 col-4 col-price">
                            <label for="productStock" class="form-label">Stock</label>
                            <input type="number" id="productStock" name="stock" class="form-control" value="<%= product.stock %>" placeholder="Enter stock quantity">
                            <span id="stockError" class="error" style="color: red;"></span>
                        </div>
                        <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                            <label for="productDescription" class="form-label">Description</label>
                            <textarea id="productDescription" name="description" class="form-control" rows="3" placeholder="Enter product description"><%= product.description %></textarea>
                            <span id="descriptionError" class="error" style="color: red;"></span>
                        </div>
                        <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                            <label for="productCategory" class="form-label">Category</label>
                            <select id="productCategory" name="category" class="form-select">
                                <option value="" disabled selected>Select Category</option>
                                <% for (let category of categories) { %>
                                  <option value="<%= category._id %>" <% if (category._id.toString() === product.category.toString()) { %> selected <% } %> >
                                    <%= category.name %>
                                </option>
                                <% } %>
                            </select>
                            <span id="categoryError" class="error" style="color: red;"></span>
                        </div>
                        
                            
                        <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                          <label for="productImage" class="form-label">Product Images:</label>
                          <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 g-2">
                              <% if (product.images && product.images.length > 0) { %>
                                  <% product.images.forEach(image => { %>
                                      <div class="col">
                                          <img src="/products/<%= image %>" class="img-thumbnail" alt="Product Image">
                                      </div>
                                  <% }); %>
                              <% } else { %>
                                  <div class="col">
                                      <p>No images available.</p>
                                  </div>
                              <% } %>
                          </div>
                          <input type="file" id="productImage" multiple name="images" class="form-control mt-2">
                          <span id="imagesError" class="error" style="color: red;"></span>
                      </div>
                      
                        
                    </div>
                </article>
                
                <div class="row align-items-center mt-3">
                    <div class="col-lg-12 col-sm-12 col-12 text-end">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </div>
            </form>
            
        </div>
    </div>
</section>


<script>
    document.addEventListener("DOMContentLoaded", () => {
      // Get references to form elements
      const categoryInput = document.getElementById('productCategory');
      const nameInput = document.getElementById('productName');
      const priceInput = document.getElementById('productPrice');
      const descriptionInput = document.getElementById('productDescription');
      const imagesInput = document.getElementById('productImage');
      const stockInput = document.getElementById('productStock');
  
      // Get references to error elements
      const categoryError = document.getElementById('categoryError');
      const nameError = document.getElementById('nameError');
      const priceError = document.getElementById('priceError');
      const descriptionError = document.getElementById('descriptionError');
      const imagesError = document.getElementById('imagesError');
      const stockError = document.getElementById('stockError');
  
      // Validation functions
      const validateCategory = () => {
        if (categoryInput.value.trim() === '') {
          categoryError.textContent = '* Category is required';
          return false;
        } else {
          categoryError.textContent = '';
          return true;
        }
      };
  
      const validateName = () => {
        if (nameInput.value.trim() === '') {
          nameError.textContent = '* Product name is required';
          return false;
        } else {
          nameError.textContent = '';
          return true;
        }
      };
  
      const validatePrice = () => {
        const priceValue = priceInput.value.trim();
        const priceRegex = /^[0-9]+(\.[0-9]{1,2})?$/;
  
        if (priceValue === '') {
          priceError.textContent = '* Price is required';
          return false;
        } else if (!priceRegex.test(priceValue)) {
          priceError.textContent = '* Enter a valid price';
          return false;
        } else if (parseFloat(priceValue) < 0) {
          priceError.textContent = '* Price cannot be negative';
          return false;
        } else {
          priceError.textContent = '';
          return true;
        }
      };
  
      const validateStock = () => {
        const stockValue = stockInput.value.trim();
        if (stockValue === '') {
          stockError.textContent = '* Stock is required';
          return false;
        } else if (isNaN(stockValue) || parseInt(stockValue) < 0) {
          stockError.textContent = '* Enter a valid stock quantity';
          return false;
        } else {
          stockError.textContent = '';
          return true;
        }
      };
  
      const validateDescription = () => {
        if (descriptionInput.value.trim() === '') {
          descriptionError.textContent = '* Description is required';
          return false;
        } else {
          descriptionError.textContent = '';
          return true;
        }
      };
  
      const validateImages = () => {
    const imagesInput = document.getElementById('productImage');
    const imagesError = document.getElementById('imagesError');
    const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
    const maxSize = 5 * 1024 * 1024; // 5MB

    // If there are no files in the input, or the input is empty, we should not validate further
    if (imagesInput.files.length === 0) {
        imagesError.textContent = '';
        return true; // If no new files are being uploaded, no need for validation
    }

    // Check if at least 3 images are uploaded
    if (imagesInput.files.length < 3) {
        imagesError.textContent = '* Min 3 Images are required';
        return false;
    }

    for (let i = 0; i < imagesInput.files.length; i++) {
        const file = imagesInput.files[i];

        // Check if the file type is allowed
        if (!allowedExtensions.exec(file.name)) {
            imagesError.textContent = '* Invalid file type. Only JPG, JPEG, PNG, and GIF are allowed';
            return false;
        }

        // Check if the file size exceeds the limit
        if (file.size > maxSize) {
            imagesError.textContent = `* File size should be less than 5MB. ${file.name} is too large`;
            return false;
        }
    }

    // Clear error message if all validations pass
    imagesError.textContent = '';
    return true;
};

  
      // Add event listeners
      categoryInput.addEventListener('input', validateCategory);
      nameInput.addEventListener('input', validateName);
      priceInput.addEventListener('input', validatePrice);
      descriptionInput.addEventListener('input', validateDescription);
      imagesInput.addEventListener('change', validateImages);
      stockInput.addEventListener('input', validateStock);
  
      // Form submit event
      const form = document.getElementById('editProductForm');
      form.addEventListener('submit', (event) => {
        if (!validateCategory() || !validateName() || !validatePrice() || !validateDescription() || !validateStock() || !validateImages()) {
          event.preventDefault();
        }
      });
    });
  </script>
  