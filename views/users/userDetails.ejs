<main class="main">
  <section class="py-5">
    <div class="container">
      <div class="row">
        <!-- Sidebar Navigation -->
        <nav class="col-md-3 sidebar">
          <ul class="nav nav-tabs flex-column" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="true">Dashboard</a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="forgot-password-tab" data-bs-toggle="tab" href="#forgot-password" role="tab" aria-controls="forgot-password" aria-selected="false">Forgot Password</a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false">Orders</a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="false">Address</a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="account-detail-tab" data-bs-toggle="tab" href="#account-detail" role="tab" aria-controls="account-detail" aria-selected="false">Account Detail</a>
            </li>
          </ul>
        </nav>
        <!-- Main Content -->
        <div class="col-md-9">
          <div class="tab-content mt-3" id="myTabContent">
            <!-- Dashboard Tab -->
            <div class="tab-pane fade show active" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
              <div class="card mb-4">
                <div class="card-body">
                  <header class="mb-4">
                    <h2 class="mb-0"><%= user.firstName %> <%= user.lastName %></h2>
                  </header>
                  <div>
                    <p><strong>First Name:</strong> <%= user.firstName %></p>
                    <p><strong>Last Name:</strong> <%= user.lastName %></p>
                    <p><strong>Email:</strong> <%= user.email %></p>
                    <p><strong>Phone:</strong> <%= user.phone %></p>
                  </div>
                </div>
              </div>
            </div>

            <!-- Forgot Password Tab -->
            <div class="tab-pane fade" id="forgot-password" role="tabpanel" aria-labelledby="forgot-password-tab">
              <div class="card mb-4">
                <div class="card-body">
                  <p>If you've forgotten your password, please click the link below to reset it:</p>
                  <a href="/forgot-password" class="btn btn-outline-primary"><i class="fa fa-key mr-2"></i> Forgot Password</a>
                </div>
              </div>
            </div>

            <!-- Orders Tab -->
            <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
              <div class="card mb-4">
                <div class="card-header bg-dark text-white">
                  <h4 class="mb-0"><i class="fa fa-shopping-cart mr-2"></i> Your Orders</h4>
                </div>
                <div class="card-body">
                  <% if (orders && orders.length > 0) { %>
                    <table class="table">
                      <thead>
                        <tr>
                          <th>Order ID</th>
                          <th>Date</th>
                          <th>Items</th>
                          <th>Total</th>
                          <th>Status</th>
                          <th>Action</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% orders.forEach(order => { %>
                          <tr>
                            <td>#<%= order._id.toString().slice(-6).toUpperCase() %></td>
                            <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                            <td>
                              <% order.items.forEach((item, index) => { %>
                                <%= item.product.name %> (x<%= item.quantity %>)
                                <%= index < order.items.length - 1 ? ', ' : '' %>
                              <% }) %>
                            </td>
                            <td><%= new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(order.totalPrice) %></td>

                            
                            <% if (order.status === 'Cancelled') { %>
                              <td><span class="badge bg-danger">Cancelled</span></td> 
                            <% } else if (order.status === 'Shipped') { %>
                              <td><span class="badge bg-info">Shipped</span></td>
                            <% } else if (order.status === 'Delivered') { %>
                              <td><span class="badge bg-success">Delivered</span></td>
                            <% } else if (order.status === 'Processing'){ %>
                              <td><span class="badge bg-warning">Processing</span></td>
                            <% } else { %>
                              <td><span class="badge bg-secondary">Pending</span></td>
                              <%}%>
                            <td>
                              <a href="/order-details/<%= order._id %>" class="btn btn-sm btn-outline-primary">View Details</a>
                            </td>
                          </tr>
                        <% }) %>
                      </tbody>
                    </table>
                  <% } else { %>
                    <p>You haven't placed any orders yet.</p>
                  <% } %>
                </div>
              </div>
              </div>

            <!-- Address Tab -->
            <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
              <div class="row" id="addresses-container">
                <% addresses.forEach(address => { %>
                  <div class="col-lg-6">
                    <div class="card mb-4 <%= address.isDefault ? 'border-primary' : '' %>">
                      <div class="card-header bg-dark text-white">
                        <h4 class="mb-0">
                          <%= address.type %> Address
                          <% if (address.isDefault) { %>
                            <span class="badge bg-success ms-2">Default</span>
                          <% } %>
                        </h4>
                      </div>
                      <div class="card-body">
                        <address>
                          <strong>Full Name:</strong> <%= address.fullName %><br>
                          <strong>Country:</strong> <%= address.country %><br>
                          <strong>Mobile Number:</strong> <%= address.mobileNumber %><br>
                          <strong>Address Line 1:</strong> <%= address.addressLine1 %><br>
                          <% if (address.addressLine2) { %>
                            <strong>Address Line 2:</strong> <%= address.addressLine2 %><br>
                          <% } %>
                          <% if (address.landmark) { %>
                            <strong>Landmark:</strong> <%= address.landmark %><br>
                          <% } %>
                          <strong>Pincode:</strong> <%= address.pincode %><br>
                          <strong>Town/City:</strong> <%= address.townCity %><br>
                          <strong>State:</strong> <%= address.state %><br>
                        </address>
                        <button class="edit-address-btn btn btn-outline-primary" data-id="<%= address._id %>">Edit Address</button>
                        <% if (!address.isDefault) { %>
                          <button class="delete-address-btn btn btn-danger" data-id="<%= address._id %>">Delete Address</button>
                        <% } %>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
              
              <a class="btn btn-dark btn-lg mt-3" href="/add-address">
                <i class="fa fa-plus-circle mr-2"></i> Add Address
              </a>
            </div>

            <!-- Account Details Tab -->
            <div class="tab-pane fade" id="account-detail" role="tabpanel" aria-labelledby="account-detail-tab">
              <div class="card mb-4">
                <div class="card-header bg-dark text-white">
                  <h4 class="mb-0"><i class="fa fa-user mr-2"></i> Edit Account Details</h4>
                </div>
                <div class="card-body">
                  <form id="update-user-form">
                    <div class="mb-3">
                      <label class="form-label" for="firstName">First Name</label>
                      <input class="form-control" id="firstName" name="firstName" placeholder="First Name" type="text" value="<%= user.firstName %>">
                      <span id="firstNameError" class="error text-danger"></span>
                    </div>
                    <div class="mb-3">
                      <label class="form-label" for="lastName">Last Name</label>
                      <input class="form-control" id="lastName" name="lastName" placeholder="Last Name" type="text" value="<%= user.lastName %>">
                      <span id="lastNameError" class="error text-danger"></span>
                    </div>
                    <hr>
                    <div class="mb-3">
                      <label class="form-label" for="newPassword">New Password</label>
                      <div class="input-group">
                        <input class="form-control" id="newPassword" name="newPassword" placeholder="New Password" type="password">
                        <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                          <i class="fa fa-eye"></i>
                        </button>
                      </div>
                      <span id="newPasswordError" class="error text-danger"></span>
                    </div>
                    <div class="mb-3">
                      <label class="form-label" for="confirmPassword">Confirm Password</label>
                      <div class="input-group">
                        <input class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm Password" type="password">
                        <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                          <i class="fa fa-eye"></i>
                        </button>
                      </div>
                      <span id="confirmPasswordError" class="error text-danger"></span>
                    </div>
                    <button type="submit" class="btn btn-dark">Save Changes</button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

  <style>
    h4 {
      font-family: "Spartan", sans-serif;
      color: #f3eded;
      font-weight: 600;
      line-height: 1.2;
    }
    .btn-danger {
      background-color: #dc3545 !important; /* Red background */
      border-color: #dc3545 !important;     /* Red border */
      color: #fff !important;               /* White text */
    }
    .list-group-item.active {
      z-index: 2;
      color: #fff; /* Text color */
      background-color: #000; /* Background color */
      border-color: #000; /* Border color */
    }
    .card-header {
      font-family: "Spartan", sans-serif;
    }
  </style>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    // Toggle password visibility
    const togglePasswordVisibility = (passwordFieldId, toggleButtonId) => {
      const passwordField = document.getElementById(passwordFieldId);
      const toggleButton = document.getElementById(toggleButtonId);

      toggleButton.addEventListener('click', () => {
        if (passwordField.type === 'password') {
          passwordField.type = 'text';
          toggleButton.innerHTML = '<i class="fa fa-eye-slash" aria-hidden="true"></i>';
        } else {
          passwordField.type = 'password';
          toggleButton.innerHTML = '<i class="fa fa-eye" aria-hidden="true"></i>';
        }
      });
    };

    togglePasswordVisibility('newPassword', 'toggleNewPassword');
    togglePasswordVisibility('confirmPassword', 'toggleConfirmPassword');

    // Form validation
    const validateField = (input, errorElement, validationFn) => {
      input.addEventListener('input', () => {
        const isValid = validationFn(input.value);
        errorElement.textContent = isValid ? '' : '* Invalid input';
        return isValid;
      });
    };

    const validateFirstName = (value) => value.trim() !== '';
    const validateLastName = (value) => value.trim() !== '';
    const validateNewPassword = (value) => value.trim().length >= 6; // Adjusted minimum length
    const validateConfirmPassword = (value) => value === document.getElementById('newPassword').value;

    validateField(document.getElementById('firstName'), document.getElementById('firstNameError'), validateFirstName);
    validateField(document.getElementById('lastName'), document.getElementById('lastNameError'), validateLastName);
    validateField(document.getElementById('newPassword'), document.getElementById('newPasswordError'), validateNewPassword);
    validateField(document.getElementById('confirmPassword'), document.getElementById('confirmPasswordError'), validateConfirmPassword);

    // Handle user update form submission
    document.getElementById('update-user-form').addEventListener('submit', function(event) {
      event.preventDefault();

      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());

      fetch('/user-details', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(result => {
        if (result.success) {
          alert('User details updated successfully!');
          window.location.reload();
        } else {
          alert('Error updating details: ' + result.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('An unexpected error occurred. Please try again later.');
      });
    });

    // Edit address button click handler
    document.querySelectorAll('.edit-address-btn').forEach(button => {
      button.addEventListener('click', function() {
        const addressId = this.dataset.id;
        window.location.href = `/edit-address/${addressId}`;
      });
    });

    // Delete address button click handler
    document.querySelectorAll('.delete-address-btn').forEach(button => {
      button.addEventListener('click', function() {
        const addressId = this.dataset.id;

        if (confirm('Are you sure you want to delete this address?')) {
          fetch(`/address/delete/${addressId}`, { method: 'DELETE' })
          .then(response => response.json())
          .then(result => {
            if (result.success) {
              alert('Address deleted successfully!');
              window.location.reload(); // Reload to reflect changes
            } else {
              alert('Error deleting address: ' + result.message);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('An unexpected error occurred. Please try again later.');
          });
        }
      });
    });
    document.getElementById('add-address-form').addEventListener('submit', function(event) {
      event.preventDefault();

      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());

      fetch('/add-address', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(responseData => {
        const formMessage = document.getElementById('form-message');
        if (responseData.success) {
          formMessage.textContent = 'Address added successfully!';
          formMessage.style.color = 'green';
          // Optionally, reset the form or redirect
          document.getElementById('add-address-form').reset();
          window.location.href = "/user-details";
          console.log("address added");
          
        } else {
          formMessage.textContent = 'Error: ' + responseData.message;
          formMessage.style.color = 'red';
        }
      })
      .catch(error => {
        console.error('Error:', error);
        const formMessage = document.getElementById('form-message');
        formMessage.textContent = 'An error occurred';
        formMessage.style.color = 'red';
      });
    });

  });

  </script>
